/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package billpaymentdistributor;

import java.awt.Dimension;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;

/**
 *
 * @author yesulikplimits wwanyizah@gmail.com YESULIKPLIM INFORMATION TECHNOLOGY
 * SERVICES Desc: Electricity Bill Distributor.
 *
 */
public class MainEnvironment extends javax.swing.JFrame {

	/**
	 * Creates new form MainEnvironment
	 */
	// This is the main class default constructor.
	public MainEnvironment() {
		initComponents();
		UIManager.put("OptionPane.minimumSize", new Dimension(500, 200));
		UIManager.put("OptionPane.messageFont", new FontUIResource(new Font("Times New Roman", Font.BOLD, 18)));
		
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                descPanel = new javax.swing.JPanel();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                jLabel3 = new javax.swing.JLabel();
                jLabel4 = new javax.swing.JLabel();
                jLabel5 = new javax.swing.JLabel();
                jLabel6 = new javax.swing.JLabel();
                jLabel7 = new javax.swing.JLabel();
                jLabel8 = new javax.swing.JLabel();
                jLabel9 = new javax.swing.JLabel();
                jLabel10 = new javax.swing.JLabel();
                jLabel11 = new javax.swing.JLabel();
                jLabel12 = new javax.swing.JLabel();
                jLabel13 = new javax.swing.JLabel();
                jLabel14 = new javax.swing.JLabel();
                jLabel16 = new javax.swing.JLabel();
                jLabel17 = new javax.swing.JLabel();
                jLabel18 = new javax.swing.JLabel();
                jLabel19 = new javax.swing.JLabel();
                jLabel20 = new javax.swing.JLabel();
                jLabel21 = new javax.swing.JLabel();
                jLabel22 = new javax.swing.JLabel();
                jLabel23 = new javax.swing.JLabel();
                jLabel25 = new javax.swing.JLabel();
                jLabel27 = new javax.swing.JLabel();
                jLabel28 = new javax.swing.JLabel();
                jLabel29 = new javax.swing.JLabel();
                jLabel30 = new javax.swing.JLabel();
                jLabel31 = new javax.swing.JLabel();
                jLabel32 = new javax.swing.JLabel();
                jLabel33 = new javax.swing.JLabel();
                jLabel24 = new javax.swing.JLabel();
                jLabel34 = new javax.swing.JLabel();
                jLabel35 = new javax.swing.JLabel();
                yits = new javax.swing.JLabel();
                lineB = new javax.swing.JLabel();
                elec_bill = new javax.swing.JLabel();
                lineB1 = new javax.swing.JLabel();
                workPanel = new javax.swing.JPanel();
                no_roomsl = new javax.swing.JLabel();
                proffer_L = new javax.swing.JLabel();
                no_roomsf = new javax.swing.JTextField();
                t_amountf = new javax.swing.JTextField();
                proffer = new javax.swing.JButton();
                compFrame = new javax.swing.JInternalFrame();
                compPanel = new javax.swing.JPanel();
                calculate = new javax.swing.JButton();
                no_elecl = new javax.swing.JLabel();
                enter = new javax.swing.JButton();
                submit = new javax.swing.JButton();
                clear = new javax.swing.JButton();
                jLabel26 = new javax.swing.JLabel();
                copyActual = new javax.swing.JButton();
                progres = new javax.swing.JProgressBar();
                load = new javax.swing.JLabel();
                bottomDecrb = new javax.swing.JLabel();
                t_amountl1 = new javax.swing.JLabel();
                total_rooms = new javax.swing.JLabel();
                t_amountl_bill = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                addWindowListener(new java.awt.event.WindowAdapter() {
                        public void windowClosed(java.awt.event.WindowEvent evt) {
                                formWindowClosed(evt);
                        }
                });

                descPanel.setBackground(new java.awt.Color(255, 204, 51));
                descPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel1.setForeground(new java.awt.Color(0, 0, 0));
                jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel1.setText("⚡");
                descPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 30, 60));

                jLabel2.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel2.setForeground(new java.awt.Color(0, 0, 0));
                jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel2.setText("ECG");
                descPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 50, 60));

                jLabel3.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel3.setForeground(new java.awt.Color(0, 0, 0));
                jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel3.setText("ECG");
                descPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 80, 60));

                jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel4.setForeground(new java.awt.Color(0, 0, 0));
                jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel4.setText("⚡");
                descPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 40, 50));

                jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel5.setForeground(new java.awt.Color(0, 0, 0));
                jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel5.setText("⚠");
                descPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 650, 30, -1));

                jLabel6.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel6.setForeground(new java.awt.Color(0, 0, 0));
                jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel6.setText("ECG");
                descPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, 90, 60));

                jLabel7.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel7.setForeground(new java.awt.Color(0, 0, 0));
                jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel7.setText("ECG");
                descPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 50, 60));

                jLabel8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel8.setForeground(new java.awt.Color(0, 0, 0));
                jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel8.setText("⚠");
                descPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 520, 40, 60));

                jLabel9.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel9.setForeground(new java.awt.Color(0, 0, 0));
                jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel9.setText("ECG");
                descPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 60, 50));

                jLabel10.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel10.setForeground(new java.awt.Color(0, 0, 0));
                jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel10.setText("⚡");
                descPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 40, 50));

                jLabel11.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel11.setForeground(new java.awt.Color(0, 0, 0));
                jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel11.setText("ECG");
                descPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 50, 60));

                jLabel12.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel12.setForeground(new java.awt.Color(0, 0, 0));
                jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel12.setText("⚡");
                descPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, 40, 40));

                jLabel13.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel13.setForeground(new java.awt.Color(0, 0, 0));
                jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel13.setText("ECG");
                descPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 270, 90, 60));

                jLabel14.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel14.setForeground(new java.awt.Color(0, 0, 0));
                jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel14.setText("ECG");
                descPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 440, 70, 60));

                jLabel16.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel16.setForeground(new java.awt.Color(0, 0, 0));
                jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel16.setText("ECG");
                descPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 390, 90, 60));

                jLabel17.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel17.setForeground(new java.awt.Color(0, 0, 0));
                jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel17.setText("⚡");
                descPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 680, 50, 30));

                jLabel18.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel18.setForeground(new java.awt.Color(0, 0, 0));
                jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel18.setText("ECG");
                descPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 580, 50, 60));

                jLabel19.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel19.setForeground(new java.awt.Color(0, 0, 0));
                jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel19.setText("ECG");
                descPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 50, 30));

                jLabel20.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel20.setForeground(new java.awt.Color(0, 0, 0));
                jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel20.setText("ECG");
                descPanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 630, 40, 50));

                jLabel21.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel21.setForeground(new java.awt.Color(0, 0, 0));
                jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel21.setText("⚡");
                descPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 640, 40, 60));

                jLabel22.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel22.setForeground(new java.awt.Color(0, 0, 0));
                jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel22.setText("ECG");
                descPanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 550, 90, 60));

                jLabel23.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel23.setForeground(new java.awt.Color(0, 0, 0));
                jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel23.setText("ECG");
                descPanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, 90, 60));

                jLabel25.setFont(new java.awt.Font("C059", 1, 12)); // NOI18N
                jLabel25.setForeground(new java.awt.Color(0, 0, 0));
                jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel25.setText("ECG");
                descPanel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 290, 40, 60));

                jLabel27.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel27.setForeground(new java.awt.Color(0, 0, 0));
                jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel27.setText("⚡");
                descPanel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 30, 50));

                jLabel28.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel28.setForeground(new java.awt.Color(0, 0, 0));
                jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel28.setText("⚠");
                descPanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, 30, 40));

                jLabel29.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel29.setForeground(new java.awt.Color(0, 0, 0));
                jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel29.setText("⚠");
                descPanel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 30, 40));

                jLabel30.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel30.setForeground(new java.awt.Color(0, 0, 0));
                jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel30.setText("⚠");
                descPanel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 30, 40));

                jLabel31.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel31.setForeground(new java.awt.Color(0, 0, 0));
                jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel31.setText("⚠");
                descPanel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 30, 40));

                jLabel32.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel32.setForeground(new java.awt.Color(0, 0, 0));
                jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel32.setText("⚡");
                descPanel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 40, 40));

                jLabel33.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel33.setForeground(new java.awt.Color(0, 0, 0));
                jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel33.setText("⚠");
                descPanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 30, 40));

                jLabel24.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel24.setForeground(new java.awt.Color(0, 0, 0));
                jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel24.setText("⚠");
                descPanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, 30, 40));

                jLabel34.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel34.setForeground(new java.awt.Color(0, 0, 0));
                jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel34.setText("⚠");
                descPanel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 490, 30, 40));

                jLabel35.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
                jLabel35.setForeground(new java.awt.Color(0, 0, 0));
                jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel35.setText("⚡");
                descPanel.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 40, 60));

                yits.setFont(new java.awt.Font("C059", 1, 24)); // NOI18N
                yits.setForeground(new java.awt.Color(255, 0, 51));
                yits.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                yits.setText("Yesulikplim Info. Tech. Services' ");
                descPanel.add(yits, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 750, -1, -1));

                lineB.setFont(new java.awt.Font("C059", 1, 18)); // NOI18N
                lineB.setForeground(new java.awt.Color(255, 255, 255));
                lineB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                lineB.setText("================================================");
                descPanel.add(lineB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 800, 530, -1));

                elec_bill.setFont(new java.awt.Font("C059", 1, 18)); // NOI18N
                elec_bill.setForeground(new java.awt.Color(155, 59, 107));
                elec_bill.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                elec_bill.setText("Electricity Bill Distributor");
                descPanel.add(elec_bill, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 780, 270, -1));

                lineB1.setFont(new java.awt.Font("C059", 1, 18)); // NOI18N
                lineB1.setForeground(new java.awt.Color(255, 255, 255));
                lineB1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                lineB1.setText("================================================");
                descPanel.add(lineB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 720, 530, -1));

                workPanel.setBackground(new java.awt.Color(155, 59, 103));
                workPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                no_roomsl.setFont(new java.awt.Font("C059", 1, 28)); // NOI18N
                no_roomsl.setForeground(new java.awt.Color(255, 255, 255));
                no_roomsl.setText("Sum of rooms:");
                workPanel.add(no_roomsl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 220, 40));

                proffer_L.setFont(new java.awt.Font("C059", 0, 14)); // NOI18N
                proffer_L.setForeground(new java.awt.Color(204, 204, 204));
                proffer_L.setText("(Send your data for computation)");
                workPanel.add(proffer_L, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 220, 40));

                no_roomsf.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                no_roomsfActionPerformed(evt);
                        }
                });
                workPanel.add(no_roomsf, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 140, 50));

                t_amountf.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                t_amountfActionPerformed(evt);
                        }
                });
                workPanel.add(t_amountf, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 140, 50));

                proffer.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N
                proffer.setText("Proffer");
                proffer.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                profferActionPerformed(evt);
                        }
                });
                workPanel.add(proffer, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 190, 100, 50));

                compFrame.setForeground(new java.awt.Color(255, 204, 102));
                compFrame.setTitle("Data Entry Panel");
                compFrame.setVisible(true);

                compPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                calculate.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N
                calculate.setText("Compute data");
                calculate.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                calculateActionPerformed(evt);
                        }
                });
                compPanel.add(calculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 170, 50));

                no_elecl.setFont(new java.awt.Font("C059", 0, 36)); // NOI18N
                no_elecl.setForeground(new java.awt.Color(0, 0, 0));
                no_elecl.setText("Enter Requirements:");
                compPanel.add(no_elecl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 360, 40));

                enter.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N
                enter.setText("Enter");
                enter.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                enterActionPerformed(evt);
                        }
                });
                compPanel.add(enter, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 100, 50));

                submit.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N
                submit.setText("Submit");
                submit.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                submitActionPerformed(evt);
                        }
                });
                compPanel.add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, 100, 50));

                clear.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N
                clear.setText("Clear");
                clear.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                clearActionPerformed(evt);
                        }
                });
                compPanel.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 280, 100, 50));

                jLabel26.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
                jLabel26.setForeground(new java.awt.Color(155, 59, 104));
                jLabel26.setText("....--------------------------------------------------------....");
                compPanel.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 70, 400, -1));

                copyActual.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N
                copyActual.setText("Prev.");
                copyActual.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                copyActualActionPerformed(evt);
                        }
                });
                compPanel.add(copyActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 100, 50));

                progres.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
                progres.setStringPainted(true);
                progres.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                progresStateChanged(evt);
                        }
                });
                compPanel.add(progres, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 300, 30));

                load.setFont(new java.awt.Font("C059", 2, 14)); // NOI18N
                load.setText("Data loaded");
                compPanel.add(load, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, 100, 30));

                javax.swing.GroupLayout compFrameLayout = new javax.swing.GroupLayout(compFrame.getContentPane());
                compFrame.getContentPane().setLayout(compFrameLayout);
                compFrameLayout.setHorizontalGroup(
                        compFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, compFrameLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(compPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                );
                compFrameLayout.setVerticalGroup(
                        compFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(compFrameLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(compPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE))
                );

                workPanel.add(compFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 250, 680, 430));

                bottomDecrb.setFont(new java.awt.Font("DejaVu Serif Condensed", 3, 18)); // NOI18N
                bottomDecrb.setForeground(new java.awt.Color(255, 255, 255));
                bottomDecrb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                bottomDecrb.setText("Carefully read to understand before Entering data!!!");
                workPanel.add(bottomDecrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 690, 620, -1));

                t_amountl1.setFont(new java.awt.Font("C059", 1, 28)); // NOI18N
                t_amountl1.setForeground(new java.awt.Color(255, 255, 255));
                t_amountl1.setText("Total amount(GH¢):");
                workPanel.add(t_amountl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 310, 40));

                total_rooms.setFont(new java.awt.Font("C059", 0, 14)); // NOI18N
                total_rooms.setForeground(new java.awt.Color(204, 204, 204));
                total_rooms.setText("(Total of rooms per a meter)");
                workPanel.add(total_rooms, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 250, 30));

                t_amountl_bill.setFont(new java.awt.Font("C059", 0, 14)); // NOI18N
                t_amountl_bill.setForeground(new java.awt.Color(204, 204, 204));
                t_amountl_bill.setText("(Electrical energy buyable)");
                workPanel.add(t_amountl_bill, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 220, 30));

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(descPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(workPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(workPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(descPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

	float total_amount;
	float copy_total_amount;
	int len;
	int new_len;
	int copy_totalMem;
	Boolean isDataNotProffered = true;
	Boolean isPrevClicked;

	int total_device = 0;
	ArrayList<Integer> arrayL_each_dev = new ArrayList<Integer>(len);
	ArrayList<Float> arrayL_each_bill = new ArrayList<Float>(len);
	ArrayList<String> roomIdNum = new ArrayList<String>(len);
	ArrayList<Integer> num_mem_per_room = new ArrayList<Integer>(len);

	ArrayList<Integer> copy_arrayL_each_dev = new ArrayList<Integer>();
	ArrayList<Float> copy_arrayL_each_bill = new ArrayList<Float>();
	ArrayList<String> copy_roomIdNum = new ArrayList<String>();
	ArrayList<Integer> copy_num_mem_per_room = new ArrayList<Integer>();

	Boolean isDataNotEntered = true;
	Boolean isDataEntered = false;
	int feedBack = 0;

	int totalMem = 0;
	Boolean isDataNotCompute = true;
	float total_unit_rate = 0;
	float copy_total_unit_rate = 0;

	Boolean isNotSubmited = true;
	Boolean isSubmited = false;
	int counter = 0;


        private void profferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profferActionPerformed
		// TODO add your handling code here:
		/* 
		This method out-hold/ send the total amount and the number rooms using the same meter.
		It takes in only positive integer values.
		 */
		copy_totalMem = 0;
		copy_arrayL_each_bill.clear();
		totalMem = 0;
		total_amount = 0;
		copy_total_amount = 0;
		len = 0;
		new_len = 0;
		String val_len = no_roomsf.getText();
		String val_amount = t_amountf.getText();
		isPrevClicked = false;

		try {
			len = Integer.parseInt(val_len);
			new_len = Integer.parseInt(val_len);

		} catch (Exception e) {
			len = 0;
			new_len = 0;
		}

		try {
			total_amount = Float.parseFloat(val_amount);
			copy_total_amount = Float.parseFloat(val_amount);

		} catch (Exception e) {
			total_amount = 0;
		}

		if (len >= 2 && total_amount > 0) {

			if (len > 20) {
				JOptionPane.showMessageDialog(rootPane, "<html><font face='Calibri' size='12' color='red'>🤗 Sorry!\nThe total number of rooms cannot be more than 20!\nReqiured (2-20).");
			} else {
				JOptionPane.showMessageDialog(rootPane, "<html><font face='Calibri' size='15' color='green'>😍 Successful! ❤");
				isDataNotProffered = false;
				
			}

		} else {
			if (val_len.isBlank() || val_len.isEmpty() || val_amount.isBlank() || val_amount.isEmpty()) {

				JOptionPane.showMessageDialog(rootPane, "<html><font face='Calibri' size='12' color='red'>🤗 You cannot leave any field empty or blank!\nEnter positive numerical value.\nSum of rooms ==> (2 - 20)\nTotal amount (bill) GH¢ ==> more than 0.", "🦁 Warning!", JOptionPane.WARNING_MESSAGE);

			} else if (len == 1 && total_amount > 0) {

				JOptionPane.showMessageDialog(rootPane, "<html><font face='Times New Roman', size='12', color='blue'>Your Total bill: GH¢" + total_amount + "\n-------------------------------------------\n<html><font face='Calibri' size='8' color='#F30891'>\u263A\u263A\u263A\u263A\u263A\u263A\u263A\u263A");
			} else {
				JOptionPane.showMessageDialog(rootPane, "<html><font face='Calibri' size='15' color='red'>🤗 Invalid!\nEnter positive numerical value.\nSum of rooms ==> (2 - 20)\nTotal amount (bill) GH¢ ==> more than 0.", "🦁 Warning!", JOptionPane.ERROR_MESSAGE);
			}

		}
        }//GEN-LAST:event_profferActionPerformed

        private void no_roomsfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no_roomsfActionPerformed

		// TODO add your handling code here:

        }//GEN-LAST:event_no_roomsfActionPerformed

        private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
		// TODO add your handling code here:
		int delete = 0;
		copy_totalMem = 0;
		copy_arrayL_each_bill.clear();
		int num_dev = 0;
		if (isDataNotProffered) {

			JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='red'>🦁 Sorry!\nNo data proffered.");

		} else {

			total_device = 0;
			arrayL_each_bill.clear();
			roomIdNum.clear();
			arrayL_each_dev.clear();
			num_mem_per_room.clear();

			copy_arrayL_each_bill.clear();
			copy_arrayL_each_dev.clear();
			copy_roomIdNum.clear();
			copy_num_mem_per_room.clear();

			if (len > 1) {
				 
				for (int i = 0; i < len; i++) {
					String roomN;
					Boolean isEmpty = true;
					Boolean isNum = true;
					if (i % 3 == 0) {
						feedBack = JOptionPane.showConfirmDialog(null, "Do you want to continue?", "Warning! Clicking 'no' will erase previous data.", JOptionPane.YES_NO_OPTION);
					}

					if (feedBack == 1) {

						arrayL_each_bill.clear();
						roomIdNum.clear();
						arrayL_each_dev.clear();
						num_mem_per_room.clear();

						copy_arrayL_each_bill.clear();
						copy_arrayL_each_dev.clear();
						copy_roomIdNum.clear();
						copy_num_mem_per_room.clear();

						isDataEntered = false;
						isDataNotEntered = true;
						isDataNotProffered = true;
						isDataNotEntered = true;
						isNotSubmited = true;
						isDataNotCompute = true;
						isPrevClicked = false;
						feedBack = 0;
						break;
					}
					while (isEmpty) {
						try {
							roomN = JOptionPane.showInputDialog("Enter your room Id.");
							while (roomN.isBlank() || roomN.isEmpty()) {
								JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='red'>🦊 Sorry!\nYou cannot submit a blank or empty variable.", "Warning 🦁!!!", JOptionPane.WARNING_MESSAGE);
								roomN = JOptionPane.showInputDialog("Enter your room Id.");
							}
							roomIdNum.add(roomN);
							copy_roomIdNum.add(roomN);
							isEmpty = false;
						} catch (Exception e) {
							JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='red'>🦊 Sorry!\nYou cannot leave it blank or empty.", "Warning 🦁 !!!", JOptionPane.WARNING_MESSAGE);
						}

					}

					int roomMem;

					while (isNum) {
						try {
							roomMem = Integer.parseInt(JOptionPane.showInputDialog("How many are you in a room? (1-10)."));
							while (roomMem < 1 || roomMem > 10) {
								JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='red'>🦊 Sorry!\nA room can only contain atleast 1 and atmost 10 human.");
								roomMem = Integer.parseInt(JOptionPane.showInputDialog("How many are you in a room? (1-10)."));
							}
							if (roomMem >= 1 && roomMem <= 10) {
								isNum = false;
							}
							num_mem_per_room.add(roomMem);
							copy_num_mem_per_room.add(roomMem);
						} catch (Exception e) {
							JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='red'>🦊 Sorry!\nYou cannot leave it blank or empty or string.\nEnter the total number of room members > 0:", "Warning 🦁!!", JOptionPane.WARNING_MESSAGE);

						}
					}

					Boolean isInteger = true;
					while (isInteger) {
						try {
							num_dev = Integer.parseInt(JOptionPane.showInputDialog("How many electronic equipment are you using\n(excluding bulb, iron, fun and computer)?"));

							while (num_dev < 0 || num_dev > 10) {

								JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='red'>🦊 Sorry!\nYou cannot either enter negative or more than 10 value.\nRequired (0 - 10).", "Warning 🦁 !!", JOptionPane.WARNING_MESSAGE);

								num_dev = Integer.parseInt(JOptionPane.showInputDialog("How many electronic equipment are you using\n(excluding bulb, iron and fun)?"));
							}
							if (num_dev >= 0 && num_dev <= 10) {
								isInteger = false;
							}

						} catch (Exception e) {
							JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='red'>🦊 Sorry!\nYou cannot leave it blank or empty or string!\nEnter the number of electronics equipment in the room\n>= 0 and <= 10.", "Warning 🦁!!", JOptionPane.WARNING_MESSAGE);

						}
					}
					try {
						arrayL_each_dev.add(num_dev);
						total_device += num_dev;
						copy_arrayL_each_dev.add(num_dev);
						isDataNotEntered = false;
						isDataEntered = true;
						isSubmited = false;
						isDataNotProffered = true;
						 progres.setStringPainted(true);
						 counter = ((i+1) * 100)/len;
						 progres.setValue(counter);
						 delete++;
						

					} catch (Exception e) {

						JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' color='red'>Empty!");
					}
				}
				if (len == roomIdNum.size()) {
					totalMem = 0;
					copy_totalMem = 0;
					JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='#324F11'>Successfully entered!");
				} else if (delete > 0){
					progres.setValue(0);
					JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='#CE5C00'>Data deleted!");
					
				} else {
					JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='#36AA14'>Bye!");
				}
			}
		}
        }//GEN-LAST:event_enterActionPerformed

        private void t_amountfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_amountfActionPerformed

        }//GEN-LAST:event_t_amountfActionPerformed

        private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed

		if (isDataNotEntered) {
			JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='red'>🦁 Sorry!\nNo data entered.");

		} else {
			try {
				total_unit_rate = new Mathematical_Algo().calculate_total_unit_rate(total_device);
				copy_total_unit_rate = total_unit_rate;
				JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='green'>😍 Submitted!");
				isNotSubmited = false;
				isSubmited = true;
			} catch (Exception e) {
				JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' color='red'>Blank!");
			}
		}
        }//GEN-LAST:event_submitActionPerformed

	/**
	 * This method is the actual calculator_platform that take works on new
	 * data set entered and invoke all the mathematical method.
	 */
	private void computeActual() {

		try {

			for (int i : num_mem_per_room) {
				totalMem += i;

			}

			for (int i = 0; i < len; i++) {
				Mathematical_Algo math = new Mathematical_Algo(arrayL_each_dev.get(i),
					total_amount,
					num_mem_per_room.get(i),
					total_unit_rate,
					totalMem);

				// Adding the results into the arraylist as data structure to keep all the bill payable per room.
				arrayL_each_bill.add(math.calculate_total_bill_per_room());

			}
			for (int i = 0; i < len; i++) {
				JOptionPane.showMessageDialog(workPanel, "<html><font size='10'>Room ID.: " + roomIdNum.get(i)
					+ "\n<html><font face='Time New Roman' size='12', color='green'>Your total bill: GH¢"
					+ String.format("%.4f", arrayL_each_bill.get(i))
					+ "\n-----------------------------------------------------------------------------\n"
					+ "<html><font face='Calibri' size='8' color='#F30891'>\u263A\u263A\u263A\u263A\u263A\u263A\u263A\u263A");
				isDataNotCompute = false;
			}

		} catch (Exception e) {
			JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='red'>🦁 Sorry!\nNo data entered!");
		}
	}

	/**
	 * This method is the copy of Actual calculator_environ, it also keep
	 * the copy of the previous data set entered i.e.
	 */
	
	private void copyActual() {

		if (isDataEntered) {

			if (isSubmited) {
				if (new_len == copy_roomIdNum.size()) {
					if (copy_total_amount > 0) {
						try {

							for (int i : copy_num_mem_per_room) {

								copy_totalMem += i;
							}

							for (int i = 0; i < copy_roomIdNum.size(); i++) {

								// Creating of object or instance naming it math_c
								Mathematical_Algo math_c = new Mathematical_Algo(
									copy_arrayL_each_dev.get(i),
									copy_total_amount,
									copy_num_mem_per_room.get(i),
									copy_total_unit_rate,
									copy_totalMem);

								// Adding the results into the arraylist as data structure to keep all the bill payable per room.
								copy_arrayL_each_bill.add(math_c.calculate_total_bill_per_room());
							}
							String copy_result = "";
							for (int i = 0; i < copy_roomIdNum.size(); i++) {

								copy_result += i + 1 + ". Room ID.: " + copy_roomIdNum.get(i)
									+ ";  Total Bill: GH¢"
									+ String.format("%.2f", copy_arrayL_each_bill.get(i))
									+ "\n-----------------------------------------------------------------------------\n";

							}
							
							JOptionPane.showMessageDialog(null, copy_result + "\n<html><font face='Calibri' size='8' color='black'>GH¢"
								+ copy_total_amount + "\n=====================\n<html><font face='Times New Roman' size='12' color='#F30891'>\u263A\u263A\u263A\u263A\u263A\u263A\u263A\u263A", "Current Result ⚠⚡", JOptionPane.INFORMATION_MESSAGE);
						} catch (Exception e) {
							JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='red'>🦁 Sorry!\nNo data entered.");
						}
					} else {
						JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='red'>🦁 Sorry!\nNo data Entered.");
					}

				} else {
					JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='red'>🦁 Sorry!\nPrevious total rooms doesnot match the current value.");
				}

			} else {
				JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='red'>🤔 Sorry!\nSubmit your data, please!");
			}

		} else {
			JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='red'>🦁 Sorry!\nNo data proffered.");
		}
	}

        private void calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateActionPerformed
		// TODO add your handling code here:
		/**
		 * This method handle all the calculation for the program. It
		 * also print out the cost of each room.
		 */

		if (isDataEntered && isPrevClicked) {
			copyActual();
		} else if (isDataEntered && isSubmited) {
			computeActual();
		} else if (isNotSubmited) {
			JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='red'>🤔 Sorry!\nSubmit your data, please.");
		}
		isPrevClicked = false;
        }//GEN-LAST:event_calculateActionPerformed
        private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
		// TODO add your handling code here:
		if (isDataNotCompute) {
			JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='red'>🦁 Sorry!\nNo data to clear.");
		} else {
			try {

				total_amount = 0;
				total_unit_rate = 0;
				total_device = 0;
				arrayL_each_bill.clear();
				roomIdNum.clear();
				arrayL_each_dev.clear();
				num_mem_per_room.clear();
				progres.setValue(0);
				JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='green'>🤓 Cleared!");

				isDataNotProffered = true;
				isDataNotEntered = true;
				isNotSubmited = true;
				isDataNotCompute = true;
				isPrevClicked = false;

			} catch (Exception e) {
				JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='red'>🦁 Not cleared!");
			}
		}

        }//GEN-LAST:event_clearActionPerformed

        private void copyActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActualActionPerformed
		// TODO add your handling code here:
		if (isDataEntered) {

			if (isSubmited) {
				isPrevClicked = true;
				JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='green'><marquee> @Loading... </marquee>", "Click ok to load.", JOptionPane.INFORMATION_MESSAGE);
			} else {
				JOptionPane.showMessageDialog(workPanel, "<html><font face='Times New Roman' size='15' color='red'>🤔 Sorry!\nSubmit your data, please.");
			}
		} else {
			JOptionPane.showMessageDialog(workPanel, "<html><font face='Calibri' size='15' color='red'>🦁 Sorry!\nNo data entered.");
		}
        }//GEN-LAST:event_copyActualActionPerformed

        private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
                // TODO add your handling code here:
        }//GEN-LAST:event_formWindowClosed

        private void progresStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_progresStateChanged
                // TODO add your handling code here:
        }//GEN-LAST:event_progresStateChanged

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainEnvironment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainEnvironment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainEnvironment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainEnvironment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				MainEnvironment me = new MainEnvironment();
				me.setTitle("=== Yesulikplim ITS's Electrical Bill Distributor ===");
				if (new Mathematical_Algo().printWelcome() == 0) {
					me.setVisible(true);
				} else {
					me.setVisible(true);
				}
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel bottomDecrb;
        private javax.swing.JButton calculate;
        private javax.swing.JButton clear;
        protected static javax.swing.JInternalFrame compFrame;
        private javax.swing.JPanel compPanel;
        private javax.swing.JButton copyActual;
        private javax.swing.JPanel descPanel;
        private javax.swing.JLabel elec_bill;
        private javax.swing.JButton enter;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel10;
        private javax.swing.JLabel jLabel11;
        private javax.swing.JLabel jLabel12;
        private javax.swing.JLabel jLabel13;
        private javax.swing.JLabel jLabel14;
        private javax.swing.JLabel jLabel16;
        private javax.swing.JLabel jLabel17;
        private javax.swing.JLabel jLabel18;
        private javax.swing.JLabel jLabel19;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel20;
        private javax.swing.JLabel jLabel21;
        private javax.swing.JLabel jLabel22;
        private javax.swing.JLabel jLabel23;
        private javax.swing.JLabel jLabel24;
        private javax.swing.JLabel jLabel25;
        private javax.swing.JLabel jLabel26;
        private javax.swing.JLabel jLabel27;
        private javax.swing.JLabel jLabel28;
        private javax.swing.JLabel jLabel29;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel30;
        private javax.swing.JLabel jLabel31;
        private javax.swing.JLabel jLabel32;
        private javax.swing.JLabel jLabel33;
        private javax.swing.JLabel jLabel34;
        private javax.swing.JLabel jLabel35;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JLabel jLabel7;
        private javax.swing.JLabel jLabel8;
        private javax.swing.JLabel jLabel9;
        private javax.swing.JLabel lineB;
        private javax.swing.JLabel lineB1;
        private javax.swing.JLabel load;
        private javax.swing.JLabel no_elecl;
        public static javax.swing.JTextField no_roomsf;
        private javax.swing.JLabel no_roomsl;
        public static javax.swing.JButton proffer;
        private javax.swing.JLabel proffer_L;
        private javax.swing.JProgressBar progres;
        private javax.swing.JButton submit;
        private javax.swing.JTextField t_amountf;
        private javax.swing.JLabel t_amountl1;
        private javax.swing.JLabel t_amountl_bill;
        private javax.swing.JLabel total_rooms;
        private javax.swing.JPanel workPanel;
        private javax.swing.JLabel yits;
        // End of variables declaration//GEN-END:variables

	/**
	 * This program compute a payable bill for individual room entered base
	 * on the total bill cost, total number of people per room, total number
	 * of equipment using per room and total number of room per a electrical
	 * meter.
	 */
}

class Mathematical_Algo {

	/**
	 * Bellow is a real-time data collected at the University of Cape Coast
	 * in a certain hostel of 5rooms/meter. Date: 18TH March, 2024.
	 *
	 * ID | R.Mem  | No. Equip. | Bill_252 | Bill_50 | Bill_100
	 * ++++|+++++++|++++++++++++|++++++++++|+++++++++|++++++++++ 
	 * R14 | 2     | 4          | 97.33    | 19.17   | 38.34
	 * ----|-------|------------|----------|---------|---------- 
	 * R15 | 1     | 3          | 58.67    | 11.66   | 23.32
	 * ----|-------|------------|----------|---------|---------- 
	 * R16 | 1     | 0          | 28.67    | 5.73    | 11.46
	 * ----|-------|------------|----------|---------|---------- 
	 * R17 | 1     | 0          | 28.67    | 5.73    | 11.46
	 * ----|-------|------------|----------|---------|---------- 
	 * R18 | 1     | 1          | 38.57    | 7.71    | 15.42
	 *
	 * The Algorithm behind the scene; (bill/equipment)/month = GHc10.00;
	 * unit_rate/equipment = (10/252) * 100 = (1.98/50) * 100 = 15.42 -
	 * 11.46 ≈ 3.968 . Therefore our unit_rate/equipment = (10/252) * 100 .
	 * *
	 */
	/**
	 * These are all fields declared as private access modifier
	 */
	private final float unitRate = 3.96825397f;
	private float t_amount;
	private float t_unit_rate;
	private int num_mem_per_room;
	private int room_equip;
	private int t_mem;

	// This constructor is default  and takes no argument, in order to invoke class methods easily using this to create our instance or object.
	Mathematical_Algo() {
		;;
	}

	/**
	 *
	 * This is a parameterized constructor which take three argument i.e.
	 * room_equipment, unit_rate and total_amount. And set those variables
	 * to the fields/ instance variables / class variables.
	 *
	 */
	Mathematical_Algo(int room_equip, float t_amount, int num_mem_per_room, float t_unit_rate, int t_mem) {

		this.room_equip = room_equip;
		this.t_amount = t_amount;
		this.num_mem_per_room = num_mem_per_room;
		this.t_unit_rate = t_unit_rate;
		this.t_mem = t_mem;
	}

	/**
	 * This method return total unit rate for sum of devices.
	 *
	 * @param total_device
	 * @return
	 */

	
	protected float calculate_total_unit_rate(int total_device) {
		
		return total_device * unitRate;
	}
	/**
	 * This return equipment total bill for sum of the equipment.
	 *
	 * @return
	 */
	private float calculate_total_dev_bill() {
		return (t_unit_rate / 100) * t_amount;
	}

	/**
	 * This method return the cost of unitRate per a room equipment.
	 */
	private float calculate_bill_per_room_dev() {
				
		float roomDevBill = room_equip * ((unitRate / 100) * t_amount);

		if (calculate_total_dev_bill() > t_amount) {
			return (roomDevBill / calculate_total_dev_bill()) * t_amount;
		}
		return roomDevBill;
	}

	//This method take three arguments i.e total_amount, total_unit_rate and total_members on a meter.
	private float calculate_constant_bill() throws Exception /*ZeroDivisionError*/ {
		if (calculate_total_dev_bill() >= t_amount) {
			return 0;
		}
		return (t_amount - calculate_total_dev_bill()) / t_mem;
	}

	//This method take two arguments i.e total human per a room and constant bill  and return bill without equipment cost per a room.
	private float calculate_flat_bill_per_room() throws Exception {

		return num_mem_per_room * calculate_constant_bill();

	}

	//This method take in bill only per room and total equipment using and return the total payable bill for each room
	public float calculate_total_bill_per_room() throws Exception {

		return calculate_flat_bill_per_room() + calculate_bill_per_room_dev();
	}

	//This method print out a welcome message to the user anytime tha system is open.
	public int printWelcome() {

		return JOptionPane.showConfirmDialog(null,
			"<html><img src='icons/wit.jpg' alt='Wittyma' width='50' height='50'>\n"
			+ "<html> <font face='Calibri' size='15' color='#FFCC33'>-------------------------------------------------------------------------\n"
			+ "<html> <font face='Calibri' size='15' color='#9B386B'>Welcome to .............😍🤔❗\n"
			+ "<html> <font face='Times New Roman' size='13' color='#F50DB8'>YESULIKPLIM INFORMATION TECHNOLOGY SERVICES\n"
			+ "<html> <font face='Times New Roman' size='15' color='black'>This is our Electricity Bill Distributor. <html> <font face='Times New Roman' size='18' color='#F50DB8'>❤\n"
			+ "<html> <font face='Calibri' size='15' color='red'>-------------------------------------------------------------------------\n"
			+ "<html> <font face='Times New Roman' size='15' color='#F50DB8'>&copy;YITS&#8482;&reg;<html> <font face='Times New Roman' size='10' color='#921212'>✉ wwanyizah@gmail.com\n"
			+ "<html> <font face='Calibri' color='black'>**************************************************************************************************************************\n",
			"© All right reserved; YITS", JOptionPane.OK_CANCEL_OPTION
		);
	}

	/**
	 * This mathematics_algorithm class keep the computational of the data
	 * entered. Bye! Have a marvelous great time. End of the program!
	 */
}
